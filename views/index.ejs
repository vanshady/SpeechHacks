<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="ct" content="<%= ct %>">
    <link rel="shortcut icon" href="/images/favicon.ico" type="image/x-icon">
    <title>Speech to Text</title>
    <link href="css/watson-bootstrap-style.css" rel="stylesheet">
    <link href="css/style.css" rel="stylesheet">   
  </head>
  <body>
    
    <!-- Step 1 Section-->
    <div class="container">
      <!-- Step 3 Section-->
      <!-- First column of inputs -->
      <div class="row">
        <div class="col-lg-12 col-md-12 col-sm-12">
          <h2>Improve Your Speech Skills</h2>
        </div><!-- .col-lg-12 -->

        <div class="row">
          <div class="col-lg-12 col-md-12 col-sm-12">
            <div class="audioParent">
              <audio style="display:none" class="audio" controls>
                Your browser does not support the audio element.
              </audio>
            </div>
          </div>
        </div><!-- row -->


        <div class="row" >
          <nav class="navbar navbar-inverse" style="width:100%">
          <ul class="navbar-text">
            <li style="width:20%" id="recordButton" class="button-row nav-inverse-color" onclick="updateTimeCount()">
            <img id="microphoneIcon" src="images/microphone.svg" class="icon">
            <span class="nav-label">Record Audio</span>
            </li>
            <li style="width:20%" class="file-upload button-row nav-inverse-color">
            <div id="fileUploadTarget">
              <img src="images/upload.svg" class="icon"></img>
              <span class="nav-label">Select File</span>
            </div>
            </li>
            <li style="width:20%" class="file-upload button-row nav-inverse-color">
            <div id="StartButton">
              <img src="images/drop-down-arrow.svg" class="icon"></img>
              <span class="nav-label">Save File</span>
            </div>
            </li>
            <li style="width:20%" class="file-upload button-row nav-inverse-color">
            <div id="StartButton" onclick="analyze()">
              <img src="images/search36.svg" class="icon"></img>
              <span class="nav-label">Analyze</span>
            </div>
            </li>
            <li style="width:20%" class="file-upload button-row nav-inverse-color">
            <div id="StartButton" onclick="meet()">
              <img src="images/business11.svg" class="icon"></img>
              <span class="nav-label">Stream</span>
            </div>
            </li>
            <!--li class="play-sample-1 button-row nav-inverse-color">
            <img src="images/play.svg" class="icon">
            <span class="nav-label">Play Sample 1</span>
            </li>
            <li class="play-sample-2 button-row nav-inverse-color">
            <img src="images/play.svg" class="icon">
            <span class="nav-label">Play  Sample 2</span>
            </li-->
          </ul>

          </nav>
        </div>
        <!-- Tab panes -->
        <div class="row" style="  margin: 0;">
          <div class="col-lg-12 col-md-12 col-sm-12" style="padding: 0;">
            <div class="well">
              <form autocomplete="off" class="form-horizontal">
                <div role="tabpanel">
                  <!-- Nav tabs -->
                  <!--ul class="nav nav-tabs" role="tablist">
                    <li role="presentation" class="active"><a href="#home2" aria-controls="home" role="tab" data-toggle="tab">Text</a></li>
                    <li role="presentation"><a href="#profile2" aria-controls="profile" role="tab" data-toggle="tab">JSON</a></li>
                  </ul-->
                  <div class="hr-tab"></div>
                  <fieldset>
                    <div class="row error-row">
                      <div class="col-lg-12">
                        <div id="errorAlert" >
                          <span id="errorMessage"></span>
                          <a class="pull-right" href="#" id="errorClose">&times;</a>
                        </div>
                      </div>
                    </div>

                    <div class="row notification-row">
                      <div class="col-lg-12">
                        <div id="notificationAlert" >
                          <span id="notificationMessage"></span>
                          <a class="pull-right" href="#" id="notificationClose">&times;</a>
                        </div>
                      </div>
                    </div>
                    <div class="form-group row tabpanel-row">
                      <div class="col-lg-12">
                        <div class="tab-content">
                          <div role="tabpanel" class="tab-pane active" id="home2">
                            <textarea readonly id="resultsText" name="resultsText"></textarea>
                          </div>
                          <div role="tabpanel" class="tab-pane" id="profile2">
                            <textarea readonly id="resultsJSON"></textarea>
                          </div>
                          <div class="text-right timeCountFootnote">
                              <span class="timeCount small"></span>
                              <span class="small"></span>
                          </div>
                        </div>
                      </div><!-- .col-lg-12 -->
                    </div>
                  </fieldset>
                </div>
              </form>
            </div>
          </div><!-- /.well -->
        </div><!-- /.tabpanel -->
  
        <!--form>
        <input type="button" id="StartButton" value="Save Text" >
        </form>
        <form>
            <input type="button" id="StartButton" value="Analyze" onclick="analyze()">
        </form-->
        
        <div class="row">
          <div class="col-md-12">

            <div  class="panel panel-default">
              <div style="display:none" class="panel-heading">
                <h3>Metadata</h3>
                <span class="pull-right clickable"><i class="caret-up" style="  margin-top: -1.3em;"></i></span>
              </div>
              <div class="panel-body">

                <!-- Table -->
                <div style="display:none" class="table-scroll">
                  <table id="metadataTable">
                    <thead>
                      <tr class="table-header-row">
                        <th>WORD</th>
                        <th>START TIME(sec)</th>
                        <th>END TIME(sec)</th>
                        <th>CONFIDENCE</th>
                      </tr>
                    </thead>
                    <tbody id="metadataTableBody">
                    </tbody>
                  </table>
                </div>
                
                <div ><h2 class="hesitation" style="width:70%">Confidence Score:</h2>
                  <input id="StartButton" style="float:right" type="button" class="btn btn-block analysis-btn"  value="Share the Script" onclick="save();generateMoxtra()">
                 </div>
                <!-- END Table -->
                <div class="alt-hypothesis" >
                    
                  <h5>Did you mean?</h5>
                  <div class="hypotheses">
                    <ol></ol>
                  </div>
                  
                </div>
              </div>
            </div>




          </div><!-- /.col -->

      </div><!-- /.container -->

      <!-- for file upload dialog in toolbar -->
      <input style="display:none" type="file" id="fileUploadDialog">

      <!-- Place js files at the end of the document, with fallbacks for CDNs -->
      <script src="https://code.jquery.com/jquery-1.11.3.min.js"></script>
      <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.5/js/bootstrap.min.js"></script>
      <script src="js/index.js"></script>
           <script type="text/javascript">
     $("#StartButton").click(function() {
{      
// grab the content of the form field and place it into a variable
    var textToWrite = document.getElementById("resultsText").value;
//  create a new Blob (html5 magic) that conatins the data from your form feild
    var textFileAsBlob = new Blob([textToWrite], {type:'text/plain'});
// Specify the name of the file to be saved
    var fileNameToSaveAs = "myNewFile.txt";
    
// Optionally allow the user to choose a file name by providing 
// an imput field in the HTML and using the collected data here
// var fileNameToSaveAs = txtFileName.text;

// create a link for our script to 'click'
    var downloadLink = document.createElement("a");
//  supply the name of the file (from the var above).
// you could create the name here but using a var
// allows more flexability later.
    downloadLink.download = fileNameToSaveAs;
// provide text for the link. This will be hidden so you
// can actually use anything you want.
    downloadLink.innerHTML = "My Hidden Link";
    
// allow our code to work in webkit & Gecko based browsers
// without the need for a if / else block.
    window.URL = window.URL || window.webkitURL;
          
// Create the link Object.
    downloadLink.href = window.URL.createObjectURL(textFileAsBlob);
// when link is clicked call a function to remove it from
// the DOM in case user wants to save a second file.
    downloadLink.onclick = destroyClickedElement;
// make sure the link is hidden.
    downloadLink.style.display = "none";
// add the link to the DOM
    document.body.appendChild(downloadLink);
    
// click the new link
    downloadLink.click();
}

function destroyClickedElement(event)
{
// remove the link from the DOM
    document.body.removeChild(event.target);
}});
        
function generateMoxtra(){
            window.location.href = '/moxtra';         
          }
          
function analyze(){
            var b=  document.getElementById("resultsText").value,
            // url = 'http://speechhacks.herokuapp.com/personality/index.html?name=' + encodeURIComponent(b);
            url = window.location.href + 'personality/?name=' + encodeURIComponent(b);
            window.location.href = url;
          }

function meet(){
             window.location.href = '/meet'; 
          }
function save(){
{      
// grab the content of the form field and place it into a variable
    var textToWrite = document.getElementById("resultsText").value;
//  create a new Blob (html5 magic) that conatins the data from your form feild
    var textFileAsBlob = new Blob([textToWrite], {type:'text/plain'});
// Specify the name of the file to be saved
    var fileNameToSaveAs = "myNewFile.txt";
    
// Optionally allow the user to choose a file name by providing 
// an imput field in the HTML and using the collected data here
// var fileNameToSaveAs = txtFileName.text;

// create a link for our script to 'click'
    var downloadLink = document.createElement("a");
//  supply the name of the file (from the var above).
// you could create the name here but using a var
// allows more flexability later.
    downloadLink.download = fileNameToSaveAs;
// provide text for the link. This will be hidden so you
// can actually use anything you want.
    downloadLink.innerHTML = "My Hidden Link";
    
// allow our code to work in webkit & Gecko based browsers
// without the need for a if / else block.
    window.URL = window.URL || window.webkitURL;
          
// Create the link Object.
    downloadLink.href = window.URL.createObjectURL(textFileAsBlob);
// when link is clicked call a function to remove it from
// the DOM in case user wants to save a second file.
    downloadLink.onclick = destroyClickedElement;
// make sure the link is hidden.
    downloadLink.style.display = "none";
// add the link to the DOM
    document.body.appendChild(downloadLink);
    
// click the new link
    downloadLink.click();
}

function destroyClickedElement(event)
{
// remove the link from the DOM
    document.body.removeChild(event.target);
}};
  var counterr = 0;
  function updateTimeCount() {
  counterr = counterr + 1;
  
    for (var i = 1; i < 99999; i++)
        window.clearInterval(i);
    var duration = 0;
    var timer = duration, minutes, seconds;
    if(counterr%2){
    setInterval(function () {
        minutes = parseInt(timer / 60, 10);
        seconds = parseInt(timer % 60, 10);

        minutes = minutes < 10 ? "0" + minutes : minutes;
        seconds = seconds < 10 ? "0" + seconds : seconds;

        $('.timeCount').text(minutes + ":" + seconds);

        if (++timer < 0) {
            timer = duration;
        }
    }, 1000);}
}  
  </script>
        
  </body>
</html>
